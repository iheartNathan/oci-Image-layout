name: OCI Image Layout / Supply Cahin Artifacts Workflow

on:
  # push:
  #   branches:
  #     - main
  workflow_dispatch: 

# env:
#   REGISTRY: ghcr.io
#   REPO: net-monitor


jobs:
  build-sign-push:
    permissions:
      packages: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      
    #   - name: Extract metadata (tags, labels) for Docker
    #     id: meta
    #     uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7 # v5.7.0
    #     with:
    #       images: ${{ env.REGISTRY }}/${{ github.actor }}/${{ env.REPO }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Build Docker Image as OCI Layout
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6.15.0
        with:
          context: .
          file: Dockerfile
          outputs: type=oci,dest=output.tar
          tags: edinburgh:v1

      - name: Extract OCI image layout
        run: |
          mkdir edinburgh
          tar -xf output.tar -C edinburgh
          ls -lha edinburgh
          ls -lha edinburgh/blobs/sha256

    #   - name: Login to GitHub Container Registry
    #     uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
    #     with:
    #       registry: ${{ env.REGISTRY }}
    #       username: ${{ github.actor }}
    #       password: ${{ secrets.GITHUB_TOKEN }}
      
      
    #   - name: Install Notation CLI
    #     uses: notaryproject/notation-action/setup@b6fee73110795d6793253c673bd723f12bcf9bbb # v1.2.2
    #     with:
    #         version: "1.3.1"    
      
    #   - name: Generate Self-Signed Certificate
    #     run: |
    #         notation cert generate-test test-env.io --default
    #         notation cert show --type ca --store test-env.io test-env.io.crt
      
    #   - name: Upload Public Certificate as Artifact
    #     uses: actions/upload-artifact@v4
    #     with:
    #       name: test-env-public-cert
    #       path: /home/runner/.config/notation/localkeys/test-env.io.crt

    #   - name: Sign OCI image layout
    #     run: |
    #       export NOTATION_EXPERIMENTAL=1
    #       notation list --oci-layout net-monitor:main
    #       notation sign --oci-layout net-monitor:main
    #       notation list --oci-layout net-monitor:main
      
      
    #   - name: Create a Trust Policy
    #     run: |
    #       notation policy import trustpolicy.json
    #       notation policy show

    #   - name: Install ORAS CLI
    #     uses: oras-project/setup-oras@5c0b487ce3fe0ce3ab0d034e63669e426e294e4d
      
    #   - name: Push the OCI Image Layout to GHCR using ORAS
    #     run: |
    #       oras discover ${{ steps.meta.outputs.tags }}
    #       oras cp --from-oci-layout -r net-monitor:main  ${{ steps.meta.outputs.tags }}
    #       oras discover ${{ steps.meta.outputs.tags }}
          
      
    #   - name: Verify image as an OCI Image Layout
    #     run: |
    #       export NOTATION_EXPERIMENTAL=1
    #       notation verify ${{ steps.meta.outputs.tags }} -v